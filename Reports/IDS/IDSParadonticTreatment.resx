<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="xrLabel6.Text" xml:space="preserve">
    <value>Врач:           _________________    __________________    ____________________________
                            (Дата)                           (Подпись)                                     (ФИО)</value>
  </data>
  <data name="xrLabel2.Text" xml:space="preserve">
    <value>Проинформирован(а) о необходимости проведения профессиональной гигиены полости рта и пародонтологического лечения.
Врач поставил мне диагноз:
Пародонтологическое лечение имеет своей целью устранение очагов инфекции в полости рта с целью продления срока службы зубов, оздоровления полости рта и всего организма. В ходе лечения могут быть использованы консервативные методы (полировка зубов, медикаментозная обработка, снятие зубных отложений, закрытый кюретаж зубодесневых карманов), хирургические методы (открытый кюретаж зубодесневых карманов – лоскутная операция, наращивание костной ткани, пластика десны), ортодонтические и ортопедические методы (шинирование, протезирование). Последствиями отказа от данного лечения могут быть: прогрессирование заболевания, развитие инфекционных осложнений, появление либо нарастание болевых ощущений; потеря зуба(ов), а также системные проявления заболевания. Альтернативой данного лечения являются: удаление пораженного зуба(ов); отказ от лечения как такового. Хотя пародонтологическое лечение и гигиена полости рта имеет высокий процент клинического успеха, тем не менее, я понимаю, что она является биологической процедурой и поэтому не может иметь стопроцентной гарантии на успех.
Я осведомлен(а) о возможных осложнениях во время анестезии и при приеме анальгетиков и антибиотиков. Я проинформировал(а) врача о всех случаях аллергии к медикаментозным препаратам в прошлом и об аллергии в настоящее время. Понимая сущность предложенного лечения и уникальность собственного организма, я согласен(а) с тем, что никто не может предсказать точный результат планируемого лечения. Мне были объяснены все возможные исходы лечения, а также альтернативы предложенному лечению. При оказании пародонтологической помощи результат не гарантирован, однако гарантировано проведение лечения специалистом соответствующей квалификации, применением им качественных материалов и инструментов с соблюдением соответствующих методик и правил санитарно-эпидемиологического режима. Я понимаю необходимость визуального и рентгенологического контроля качества лечения и обязуюсь приходить на контрольные осмотры в назначенное ремя, согласованное с врачом и записанное в медицинской карте. Я имел(а) возможность задавать все интересующие меня вопросы и получил(а) исчерпывающие ответы на них. Я внимательно ознакомился(лась) с данным документом и понимаю, что последнее является юридическим документом и влечет для меня правовые последствия. Настоящий документ является неотъемлемой частью моей медицинской карты. Я подтверждаю согласие на проведение мне пародонтологического лечения.</value>
  </data>
  <metadata name="objectDataSource1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="xrLabel5.Text" xml:space="preserve">
    <value>Я, [PatientInfo.FullName], [PatientInfo.BirthDate] г. рождения
Паспорт серия и номер: [PatientInfo.SerialNumberPassport] [PatientInfo.NumberPassport]
Выданный: [PatientInfo.DateIssuedPassport]
Проживающий(ая) по адресу: [PatientInfo.FullAddress]</value>
  </data>
</root>