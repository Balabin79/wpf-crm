<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="xrLabel6.Text" xml:space="preserve">
    <value>Врач:           _________________    __________________    ____________________________
                            (Дата)                           (Подпись)                                     (ФИО)</value>
  </data>
  <data name="xrLabel2.Text" xml:space="preserve">
    <value>Проинформирован(а) о наличии, характере, степени тяжести и возможных осложнениях заболевания:
Лечащим врачом мне разъяснено, что кариес - это патологический процесс, развивающийся после прорезывания зубов и проявляющийся деминерализацией и размягчением твердых тканей зубов (эмали и дентина) с последующим образованием полости, а так же мне даны разъяснения о конкретной разновидности диагностированного у меня заболевания:
1) кариес эмали - на зубе произошло помутнение эмали, видимых разрушений нет, инструментальное обследование зондом не дало никаких признаков изменения структуры или на поверхности зуба появилась темная пигментация, при осмотре зуба зондом выявлено размягчение эмали;
2) кариес дентина - поражены ткани эмали и дентина;
 кариес цемента - почти полное разрушение зуба.
А так же иные болезни твердых тканей зубов:
Я предупрежден(а) о том, что в случае отсутствия адекватного лечения возможно возникновение осложнения в виде новых заболеваний - пульпита и периодонтита. Врачом мне было разъяснено и понятно, что с учетом диагноза моего заболевания лечение кариеса будет включать в себя следующие этапы: анестезия, наложение коффердама (изоляция зуба от полости рта латексной завесой), очищение от некротизированного дентина и эмали с помощью сверления или обработка полости лазером, формирование стенок и дна для оптимального наложения пломбы, обработка антисептиками, наложение лечебной или изолирующей прокладки, наложение пломбы пришлифовка пломбы к остальным зубам (по прикусу), чтобы она не мешалась при жевании, воссоздание вида здорового зуба, соблюдая все анатомические тонкости. Я предупрежден, что поражение зуба, которое кажется небольшим на поверхности эмали зуба, может оказаться значительным внутри. Это повлечет за собой большую площадь обработки зуба и, возможно, ненамеренное вскрытие полости зуба. В этом случае необходимо будет провести эндодонтическое лечение зуба. (депульпирование), что приведет к увеличению стоимости лечения. Альтернативными методами лечения является: изготовление вкладки или накладки; установление коронки; удаление зуба или отсутствие лечения. Я предупрежден(а) о следующих возможных последствиях и осложнениях проведенного медицинского вмешательства: рецидивирующий, или вторичный, кариес (формирование кариозной полости рядом с пломбой); воспаление пульпы, выпадение пломбы, несоответствие пломбы цвету эмали. Я предупрежден(а) о невозможности предоставления гарантии, что этот зуб не будет повреждаться вторичным кариесом в будущем, даже при успешном завершении лечения. Мне разъяснено, что симптомами большинства из перечисленных выше осложнений являются болевые ощущения в области пролеченного зуба и что при их появлении мне необходимо обратиться в клинику для дополнительного обследования и консультации с врачами-специалистами в целях исключения описанных выше осложнений и проведения при необходимости повторного лечения. Я имел возможность задать доктору все интересующие меня вопросы и получил удовлетворяющие меня ответы на них и на основании вышеизложенного, я добровольно и осознанно принимаю решение и даю добровольное информированное согласие на проведение означенного лечения.</value>
  </data>
  <metadata name="objectDataSource1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="xrLabel5.Text" xml:space="preserve">
    <value>Я, [PatientInfo.FullName], [PatientInfo.BirthDate] г. рождения
Паспорт серия и номер: [PatientInfo.SerialNumberPassport] [PatientInfo.NumberPassport]
Выданный: [PatientInfo.DateIssuedPassport]
Проживающий(ая) по адресу: [PatientInfo.FullAddress]</value>
  </data>
</root>