<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="xrLabel6.Text" xml:space="preserve">
    <value>Врач:           _________________    __________________    ____________________________
                            (Дата)                           (Подпись)                                     (ФИО)</value>
  </data>
  <data name="xrLabel2.Text" xml:space="preserve">
    <value>Ознакомился(лась) с предложенным лечением и мог(могла) или отказаться от него, или дать свое согласие на проведение данного лечения. Последствиями отказа от данного лечения могут быть: прогрессирование заболевания, развитие инфекционных осложнений, появление или нарастания боли, образование кисты, потеря зуба, а также системные проявления заболевания. Альтернативными методами лечения являются: 1) удаление пораженного зуба (зубов); 2) отсутствие лечения.
Хотя эндодонтическая терапия имеет высокий процент клинического успеха, тем не менее, я понимаю, что она является биологической процедурой и потому не может иметь стопроцентной гарантии на успех. Врач указал мне о всех возможных осложнениях, которые могут возникнуть во время лечения корневых каналов, а именно:
1) имеется определенный процент (5-10%) неудачного эндодонтического лечения, что может грозить перелечиванием корневых каналов в будущем, периапикальной хирургией и даже удалением зуба или его части;
2) во время лечения корневых каналов возможна поломка инструментов, которые невозможно будет удалить с корневого канала, или инструмент может перфорировать стенку корня. Хотя это бывает редко, такие осложнения могут стать причиной неудачного эндодонтического лечения и может привести к потере зуба или его части;
3) при перелечивании корневых каналов процент успеха эндодонтического лечения значительно снижается, что связано:
• с невозможностью удаления старой конструкции корневого канала;
• из-за сильной кальцификации корневых каналов, а также с лечением искривленных корневых каналов, которое повышает вероятность возникновения разнообразных осложнений (перфорации, поломки инструментов, переломов корня);
• с эндодонтическим лечением зубов, покрытых коронками, несъемными или съемными протезами, которое может привести к повреждению ортопедической конструкции или необходимости ее снятия, при последнем не исключается перелом зуба или отлом его части;
• с невозможностью предоставления гарантии, что этот зуб не будет повреждаться вторичным кариесом в будущем, даже при успешном завершении эндодонтической терапии.
Я понимаю, что при наличии показаний, врач может совмещать эндодонтическое лечение с другими методиками.
Врач объяснил мне необходимость обязательного покрытия зуба коронкой после проведения эндодонтического лечения, в противном случае это может привести к отлому части зуба или потери зуба вообще. Кроме того, я понимаю необходимость диагностиического контроля качества лечения в будущем и обязываюсь приходить на контрольные осмотры (по графику, обсужденным с врачом и записанным в Договоре / истории болезни). Я осведомлен(на) о возможных осложнениях во время анестезии и при приеме аналгетиков и антибиотиков. Я проинформировал(ла) врача о всех случаях аллергических реакций к медикаментозным препаратам в прошлом и на данное время. Понимая сущность предложенного лечения и уникальность собственного организма, я согласен(на) с тем, что никто не может предвидеть точного результата запланированного лечения. Я понимаю, что мне не предоставляются гарантии, но считаю, что лечение корневых каналов – в моих интересах. Мне были объяснены все возможные последствия лечения, а также альтернативные методы лечения. Я также имел(имела) возможность ставить все вопросы, которые меня интересовали. Я внимательно ознакомился(лась) с данным документом и понимаю, что он имеет юридическую силу и несет для меня правовые последствия. Данный документ является приложением и неотъемлемой частью истории болезни.</value>
  </data>
  <metadata name="objectDataSource1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="xrLabel5.Text" xml:space="preserve">
    <value>Я, [PatientInfo.FullName], [PatientInfo.BirthDate] г. рождения
Паспорт серия и номер: [PatientInfo.SerialNumberPassport] [PatientInfo.NumberPassport]
Выданный: [PatientInfo.DateIssuedPassport]
Проживающий(ая) по адресу: [PatientInfo.FullAddress]</value>
  </data>
</root>