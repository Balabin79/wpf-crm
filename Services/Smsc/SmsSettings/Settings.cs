using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Text.Json.Serialization;
using System.Threading.Tasks;

namespace Dental.Services.Smsc.SmsSettings
{
    /// <summary>
    /// Cодержит большинство настроек параметров к сервису.
    /// Параметры являются общими для всех типов рассылок (смс, емайл)
    /// 
    /// Конструктор инициализируется словарем params, ключи - имена передаваемых параметров
    /// </summary>

    [Serializable]
    sealed public class Settings
    {

        /*	
        * Имя отправителя, отображаемое в телефоне получателя. Разрешены английские буквы, цифры, пробел и
        * некоторые символы. Длина – 11 символов или 15 цифр. Все имена регистрируются в личном кабинете
        */
        public string Sender { get; set; }

        /*
         * Автоматически сокращать ссылки в сообщениях. Позволяет заменять ссылки в тексте сообщения на
         *  короткие для сокращения длины, а также для отслеживания количества переходов в лк
         * 0 (по умолчанию) – оставить ссылки в тексте сообщения без изменений.
         * 1 – сократить ссылки.
         */
        public int? Tinyurl { get; set; } = 0;

        /*
         * Время отправки SMS-сообщения абоненту.
         * Форматы:
         * DDMMYYhhmm или DD.MM.YY hh:mm.
         * Если time = 0 или указано уже прошедшее время, то сообщение будет отправлено немедленно.
         */
        public DateTime Time { get; set; }


        /*
         * Часовой пояс, в котором задается параметр time. Указывается относительно московского времени.
         * Параметр tz может быть как положительным, так и отрицательным. Если tz равен 0, то будет  
         * использован московский часовой пояс, если же параметр tz не задан, то часовой пояс будет взят из
         * настроек Клиента.
         */
        public int? Tz { get; set; } = 0;


        /*
         Тема E-mail сообщения. При отправке e-mail указание темы, текста и адреса отправителя обязательно. Для MMS обязательным является указание темы или текста. Если не указать тему MMS, то в ее качестве будет использовано имя отправителя, переданное в запросе или используемое по умолчанию.
         */
        public string Subj { get; set; }


        /*
         Признак необходимости получения стоимости рассылки.
            0 (по умолчанию) – обычная отправка.
            1 – получить стоимость рассылки без реальной отправки.
            2 – обычная отправка, но добавить в ответ стоимость выполненной рассылки.
            3 – обычная отправка, но добавить в ответ стоимость и новый баланс Клиента.
         */
        public int? Cost { get; set; } = 0;


        /*
         Список номеров телефонов и соответствующих им сообщений, разделенных двоеточием или точкой с запятой и представленный в виде:
            phones1:mes1
            phones2:mes2
            ...
            Строки разделяются через символ новой строки (%0A). В качестве phones можно указать несколько номеров телефонов через запятую. Если в сообщении mes требуется передать символ новой строки, то укажите его через \n. В случае невозможности корректировки текста мультистрокового сообщения возможно включение специального режима для передачи такого типа сообщений. Для этого необходимо дополнительно передавать в запросе параметр nl, равный 1.
            В случае необходимости передачи разных имен отправителей (и, возможно, различных часовых поясов абонентов) для разных сообщений можно использовать следующий формат передачи:
            sender1,tz1|phones1:mes1
            sender2,tz2|phones2:mes2
            ...
            В данном случае параметр tz является необязательным.
            Параметр list позволяет выполнять множественную рассылку с разными сообщениями на несколько телефонов одним http-запросом. Сообщениям в запросе присваивается единый идентификатор. Весь параметр должен быть закодирован с помощью функции urlencode.
         */
        public string List { get; set; }


        /*************************************************************************************************/

        /*
         Формат ответа сервера об успешной отправке.
            0 – (по умолчанию) в виде строки (OK - 1 SMS, ID - 1234).
            1 – вернуть ответ в виде чисел: ID и количество SMS через запятую (1234,1), при cost = 2 еще стоимость через запятую (1234,1,1.40), при cost = 3 еще новый баланс Клиента (1234,1,1.40,100.50), при cost = 1 стоимость и количество SMS через запятую (1.40,1).
            2 – ответ в xml формате.
            3 – ответ в json формате.
 */
        public int? Fmt { get; set; } = 0;

    }
}
